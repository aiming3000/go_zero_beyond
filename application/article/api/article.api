syntax = "v1"

type (
	UploadCoverResponse {
		CoverUrl string `json:"cover_url"`
	}
	PublishRequest {
		Title       string `json:"title"`
		Content     string `json:"content"`
		Description string `json:"description"`
		Cover       string `json:"cover"`
	}
	PublishResponse {
		ArticleId int64 `json:"article_id"`
	}
	ArticleDetailRequest {
		ArticleId int64 `form:"article_id"`
	}
	ArticleDetailResponse {
		Title       string `json:"title"`
		Content     string `json:"content"`
		Description string `json:"description"`
		Cover       string `json:"cover"`
		AuthorId    string `json:"author_id"`
		AuthorName  string `json:"author_name"`
	}
	ArticleListRequest {
		AuthorId  int64 `form:"author_id"`
		Cursor    int64 `form:"cursor"`
		PageSize  int64 `form:"page_size"`
		SortType  int32 `form:"sort_type"`
		ArticleId int64 `form:"article_id"`
	}
	ArticleInfo {
		ArticleId   int64  `json:"article_id"`
		Title       string `json:"title"`
		Content     string `json:"content"`
		Description string `json:"description"`
		Cover       string `json:"cover"`
	}
	ArticleListResponse {
		Articles []ArticleInfo `json:"articles"`
	}
)

@server (
	prefix: /v1/article
	//    signature: true
	jwt: Auth
)
service article-api {
	@handler UploadCoverHandler
	post /upload/cover returns (UploadCoverResponse)

	@handler PublishHandler
	post /publish (PublishRequest) returns (PublishResponse)

	@handler ArticleDetailHandler
	get /detail (ArticleDetailRequest) returns (ArticleDetailResponse)

	@handler ArticleListHandler
	get /list (ArticleListRequest) returns (ArticleListResponse)
}

//当前文件目录下
//goctl api go --dir=./  --api article.api
